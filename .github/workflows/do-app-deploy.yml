name: deploy-do-app

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["build-push-docr"]
    types: ["completed"]

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}
      - name: Install yq (Linux AMD64)
        shell: bash
        run: |
          set -e
          curl -fsSL https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          yq --version
      - name: Prepare spec with pinned backend tag (yq)
        id: spec
        shell: bash
        run: |
          set -e
          cp deploy/do-app.yaml spec.yaml
          TAG="sha-${GITHUB_SHA}"
          yq -i ".services[] |= (select(.name==\"backend\") | .image.tag = \"$TAG\")" spec.yaml
          echo "spec=spec.yaml" >> $GITHUB_OUTPUT
      - name: Show spec summary (debug)
        shell: bash
        run: |
          set -e
          echo "--- spec.yaml (head) ---"
          sed -n '1,120p' spec.yaml
          echo "--- services image blocks ---"
          yq '.services[].image' spec.yaml
      - name: Try update existing app, else create
        shell: bash
        run: |
          set -e
          APP_ID=$(doctl apps list --no-header --format ID,Spec.Name | awk '$2=="motionmavericks"{print $1}' | head -n1 || true)
          if [ -n "$APP_ID" ]; then
            echo "Updating App $APP_ID from deploy/do-app.yaml"
            doctl apps update "$APP_ID" --spec spec.yaml --wait || exit 1
          else
            echo "Creating App from deploy/do-app.yaml"
            doctl apps create --spec spec.yaml --wait || exit 1
          fi
          echo "Apps summary:" && doctl apps list --no-header --format ID,Spec.Name,DefaultIngress,UpdatedAt | head -n 5
