{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "make lint 2>/dev/null || npm run lint 2>/dev/null || echo '⚠️ No linter configured'"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_PROMPT\" == *\"architecture\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"design\"* ]]; then echo '💡 Consider using @external-delegator with Codex for architecture tasks'; fi"
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_PROMPT\" == *\"bulk\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"refactor\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"test\"* ]]; then echo '💡 Consider using @external-delegator with Qwen for bulk operations'; fi"
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_PROMPT\" == *\"github\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"pull request\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"issue\"* ]]; then echo '🔧 MCP-first: use GitHub MCP tools for repo/PR/issue operations (development only)'; fi"
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_PROMPT\" == *\"digitalocean\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"app platform\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"droplet\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"dns\"* ]]; then echo '🔧 MCP-first: use DigitalOcean MCP tools for DO resources (development only; not for prod deploy)'; fi"
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_PROMPT\" == *\"doc\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"api\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"reference\"* ]]; then echo '📚 MCP-first: use Exa for search, then Ref to fetch docs'; fi"
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_PROMPT\" == *\"ui test\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"browser\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"playwright\"* ]]; then echo '🧪 MCP-first: use Playwright MCP for browser automation/tests'; fi"
          },
          {
            "type": "command",
            "command": "if [[ \"$CLAUDE_PROMPT\" == *\"sentry\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"error\"* ]] || [[ \"$CLAUDE_PROMPT\" == *\"stacktrace\"* ]]; then echo '🩺 Use sentry-integrator (MCP-first) for issues, performance, and Seer'; fi"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "mkdir -p .claude/backups && claude todo export > .claude/backups/todo-$(date +%Y%m%d-%H%M%S).json 2>/dev/null || true"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo '📋 Session ended. Todo list backed up to .claude/backups/'"
          }
        ]
      }
    ]
  }
}
